[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['context_filetype.vim']
on_event = 'InsertEnter'
hook_source = '''
source ~/dotfiles/vim/plugins/ddc.vim
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
on_event = 'BufRead'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = 'ddc.vim'
hook_source = '''
" ddc-nvim-lsp setting
call ddc#custom#patch_global('sources', ['nvimlsp'])
call ddc#custom#patch_global('sourceOptions', {
      \ '_': { 'matchers': ['matcher_head'] },
      \ 'nvimlsp': {
      \   'mark': 'lsp',
      \   'forceCompletionPattern': '\.\w*|:\w*|->\w*' },
      \ })

" Use Customized labels
call ddc#custom#patch_global('sourceParams', {
      \ 'nvimlsp': { 'kindLabels': { 'Class': 'c' } },
      \ })
'''

[[plugins]]
repo = 'matsui54/ddc-nvim-lsp-doc'
on_source = 'ddc.vim'
hook_source = '''
  let g:ddc_nvim_lsp_doc_config = {
        \ 'documentation': {
        \   'border': 'rounded',
        \   'maxWidth': 100,
        \ },
        \ 'signature': {
        \   'border': 'rounded',
        \ },
        \ }
  call ddc_nvim_lsp_doc#enable()
'''

[[plugins]]
repo = 'LumaKernel/ddc-tabnine'
on_source = 'ddc.vim'
hook_source = '''
call ddc#custom#patch_global('sources', ['tabnine'])
call ddc#custom#patch_global('sourceOptions', {
    \ 'tabnine': {
    \   'mark': 'TN',
    \   'maxCandidates': 5,
    \   'isVolatile': v:true,
    \ }})
'''


[[plugins]]
repo = 'hrsh7th/vim-vsnip'
on_event = 'InsertEnter'
depends = ['vim-vsnip-integ']

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'


[[plugins]]
repo = 'Shougo/neco-vim'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-zsh'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-dictionary'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-matcher_fuzzy'
on_source = 'ddc.vim'


[[plugins]]
repo = 'matsui54/ddc-buffer'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-ultisnips'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-filter_editdistance'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-converter_truncate'
on_source = 'ddc.vim'


[[plugins]]
repo = 'LumaKernel/ddc-file'
on_source = 'ddc.vim'

