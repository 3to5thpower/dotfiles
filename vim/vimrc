set number
set ruler
set wildmenu 
set list 
set listchars=tab:>-,trail:* 
set smartindent
set autoindent
set mouse=a
set nobackup
set clipboard&
set clipboard^=unnamedplus
set noswapfile
set splitright
set splitbelow

set expandtab
set tabstop=4
set shiftwidth=4

set fenc=utf-8
set encoding=utf-8
set hidden

let lisp_rainbow=1

filetype plugin on
filetype indent on

set noerrorbells

"Colorscheme読み込み時の背景の透過設定
augroup TransparentBG
  autocmd!
  autocmd Colorscheme * highlight Normal ctermbg=none "テキスト
  autocmd Colorscheme * highlight NonText ctermbg=none "テキスト下の余白
  autocmd Colorscheme * highlight LineNr ctermbg=none "行番号
  autocmd Colorscheme * highlight Folded ctermbg=none "コマンド折りたたみ
  autocmd Colorscheme * highlight EndOfBuffer ctermbg=none "ファイル終わり以降の空白
augroup END


"最後のカーソル位置の復元
if has("autocmd")
    autocmd BufReadPost *
    \ if line("'\"") > 0 && line ("'\"") <= line("$") |
    \   exe "normal! g'\"" |
    \ endif
endif

" 関数を定義
function Indent()
  let save_cursor = getcurpos()
  execute "normal " . "gg=G"
  call setpos('.', save_cursor)
endfunction
command -nargs=0 Indent call Indent()

"set visualbell

inoremap <silent> jk <ESC>
nnoremap <silent> <S-l> $
nnoremap <silent> <S-h> ^
nnoremap <silent> <S-k> {
nnoremap <silent> <S-j> }
nnoremap <silent> <C-h> B
nnoremap <silent> <C-l> W
nnoremap <silent> <C-k> 4k
nnoremap <silent> <C-j> 4j
nnoremap <silent> s "_s
nnoremap <silent> <C-Right> :bnext<CR>
nnoremap <silent> <C-Left> :bprev<CR>
tnoremap <silent> <C-q> <C-\><C-n>
nnoremap <silent> j gj
nnoremap <silent> k gk


" バイナリ編集設定
augroup BinaryXXD
  autocmd!
  autocmd BufReadPre  *.bin let &binary =1
  autocmd BufReadPre  *.o let &binary =1
  autocmd BufReadPost * if &binary | silent %!xxd -g 1
  autocmd BufReadPost * set ft=xxd | endif
  autocmd BufWritePre * if &binary | %!xxd -r | endif
  autocmd BufWritePost * if &binary | silent %!xxd -g 1
  autocmd BufWritePost * set nomod | endif
augroup END


if has('nvim')
  " Neovim specific commands------------------------------------------------

  "dein Scripts-----------------------------
  if &compatible
    set nocompatible               " Be iMproved
  endif

  " Required:
  set runtimepath+=/home/sagoj0_/.cache/dein/repos/github.com/Shougo/dein.vim

  " Required:
  if dein#load_state('/home/sagoj0_/.cache/dein')
    call dein#begin('/home/sagoj0_/.cache/dein')

    " Let dein manage dein
    " Required:
    "call dein#add('/home/sagoj0_/.cache/dein/repos/github.com/Shougo/dein.vim')
    
    let s:toml_file = '~/.config/nvim/dein.toml'
    let s:toml_lazy_file = fnamemodify(expand('<sfile>'), ':h').'/dein_lazy.toml'

    call dein#load_toml(s:toml_file, {'lazy': 0})
    call dein#load_toml(s:toml_lazy_file, {'lazy': 1})
    " Add or remove your plugins here like this:
    
  "  call dein#add('Shougo/neosnippet.vim')
  "  call dein#add('Shougo/neosnippet-snippets')

    " Required:
    call dein#end()
    call dein#save_state()
  endif

  " Required:
  filetype plugin indent on
  syntax enable

  " If you want to install not installed plugins on startup.
  if dein#check_install()
    call dein#install()
  endif

  "End dein Scripts-------------------------
  "set termguicolors
  set background=dark
  syntax on
  let g:lightline = {'colorscheme': 'candid' }
  colorscheme candid

else
"vim settings
  set ttymouse=sgr
  call plug#begin()
  Plug 'vim-jp/vimdoc-ja'
  Plug 'vim-airline/vim-airline-themes'
  Plug 'vim-airline/vim-airline'
  Plug 'Shougo/context_filetype.vim'
  Plug 'cohama/lexima.vim'

  "言語関連
  Plug 'Shougo/neco-syntax'
  Plug 'rust-lang/rust.vim'
  Plug 'preservim/nerdtree'
  Plug 'cespare/vim-toml'
  Plug 'fatih/vim-go'
  Plug 'itchyny/vim-haskell-indent'

  "LSP関連
  Plug 'prabirshrestha/async.vim'
  Plug 'prabirshrestha/asyncomplete.vim'
  Plug 'prabirshrestha/asyncomplete-lsp.vim'
  Plug 'prabirshrestha/vim-lsp'
  Plug 'mattn/vim-lsp-settings'
  Plug 'mattn/vim-lsp-icons'

  Plug 'hrsh7th/vim-vsnip'
  Plug 'hrsh7th/vim-vsnip-integ'

  Plug 'Shougo/neosnippet.vim'
  Plug 'Shougo/neosnippet-snippets'
  Plug 'prabirshrestha/asyncomplete-neosnippet.vim'

  call plug#end()


  "LSP設定
  let g:lsp_diagnostics_enabled = 1
  let g:lsp_diagnostics_echo_cursor = 1
  let g:asyncomplete_auto_popup = 1
  let g:asyncomplete_auto_completeopt = 0
  let g:asyncomplete_popup_delay = 200
  let g:lsp_text_edit_enabled = 0
  inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
  inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
  inoremap <expr> <cr>    pumvisible() ? "\<C-y>" : "\<cr>"

  "nerdtree
  map <C-e> :NERDTreeToggle<CR>

  "powerline
  " Powerline系フォントを利用する
  set laststatus=2
  let g:airline_powerline_fonts = 1
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#buffer_idx_mode = 1
  let g:airline#extensions#whitespace#mixed_indent_algo = 1
  let g:airline_theme = 'badwolf'
  if !exists('g:airline_symbols')
    let g:airline_symbols = {}
  endif
  " unicode symbols
  let g:airline_left_sep = '»'
  let g:airline_left_sep = '▶'
  let g:airline_right_sep = '«'
  let g:airline_right_sep = '◀'
  let g:airline_symbols.crypt = '🔒'
  let g:airline_symbols.linenr = '☰'
  let g:airline_symbols.linenr = '␊'
  let g:airline_symbols.linenr = '␤'
  let g:airline_symbols.linenr = '¶'
  let g:airline_symbols.maxlinenr = ''
  let g:airline_symbols.maxlinenr = '㏑'
  let g:airline_symbols.branch = '⎇'
  let g:airline_symbols.paste = 'ρ'
  let g:airline_symbols.paste = 'Þ'
  let g:airline_symbols.paste = '∥'
  let g:airline_symbols.spell = 'Ꞩ'
  let g:airline_symbols.notexists = '∄'
  let g:airline_symbols.whitespace = 'Ξ'
  " powerline symbols
  let g:airline_left_sep = ''
  let g:airline_left_alt_sep = ''
  let g:airline_right_sep = ''
  let g:airline_right_alt_sep = ''
  let g:airline_symbols.branch = ''
  let g:airline_symbols.readonly = ''
  let g:airline_symbols.linenr = '☰'
  let g:airline_symbols.maxlinenr = ''

  let g:neosnippet#snippets_directory = '~/dotfiles/vim/snippets'
  imap <C-y> <Plug>(neosnippet_expand_or_jump)
  smap <C-y> <Plug>(neosnippet_expand_or_jump)
  xmap <C-y> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
endif
