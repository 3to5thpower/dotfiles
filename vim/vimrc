set number
set ruler
set wildmenu 
set list 
set listchars=tab:>-,trail:* 
set smartindent
set autoindent
set mouse=a
set nobackup
set clipboard&
set clipboard^=unnamedplus
set noswapfile
set splitright
set splitbelow

set expandtab
set tabstop=4
set shiftwidth=4

set fenc=utf-8
set encoding=utf-8
set hidden

let lisp_rainbow=1

filetype plugin on
filetype indent on

set noerrorbells

"Colorscheme読み込み時の背景の透過設定
augroup TransparentBG
  autocmd!
  autocmd Colorscheme * highlight Normal ctermbg=none "テキスト
  autocmd Colorscheme * highlight NonText ctermbg=none "テキスト下の余白
  autocmd Colorscheme * highlight LineNr ctermbg=none "行番号
  autocmd Colorscheme * highlight Folded ctermbg=none "コマンド折りたたみ
  autocmd Colorscheme * highlight EndOfBuffer ctermbg=none "ファイル終わり以降の空白
augroup END


"最後のカーソル位置の復元
if has("autocmd")
    autocmd BufReadPost *
    \ if line("'\"") > 0 && line ("'\"") <= line("$") |
    \   exe "normal! g'\"" |
    \ endif
endif

" 関数を定義
function Indent()
  let save_cursor = getcurpos()
  execute "normal " . "gg=G"
  call setpos('.', save_cursor)
endfunction
command -nargs=0 Indent call Indent()

"set visualbell

let mapleader = "\<Space>"
inoremap <silent> jk <ESC>
nnoremap <silent> <S-l> $
nnoremap <silent> <S-h> ^
nnoremap <silent> <S-k> {
nnoremap <silent> <S-j> }
nnoremap <silent> <C-h> B
nnoremap <silent> <C-l> W
nnoremap <silent> <C-k> 4k
nnoremap <silent> <C-j> 4j
nnoremap <silent> s "_s
nnoremap <silent> <C-Right> :bnext<CR>
nnoremap <silent> <C-Left> :bprev<CR>
tnoremap <silent> <C-q> <C-\><C-n>
nnoremap <silent> j gj
nnoremap <silent> k gk


" バイナリ編集設定
augroup BinaryXXD
  autocmd!
  autocmd BufReadPre  *.bin let &binary =1
  autocmd BufReadPre  *.o let &binary =1
  autocmd BufReadPost * if &binary | silent %!xxd -g 1
  autocmd BufReadPost * set ft=xxd | endif
  autocmd BufWritePre * if &binary | %!xxd -r | endif
  autocmd BufWritePost * if &binary | silent %!xxd -g 1
  autocmd BufWritePost * set nomod | endif
augroup END


if has('nvim')
  " Neovim specific commands------------------------------------------------
  let s:dein_path = expand('~/.cache/dein')
  let s:dein_repo_path = s:dein_path . '/repos/github.com/Shougo/dein.vim'
  let s:toml_path = expand('~/dotfiles/vim')

  "dein Scripts-----------------------------
  if &compatible
    set nocompatible               " Be iMproved
  endif

  " Required:
  set runtimepath+=/home/sagoj0_/.cache/dein/repos/github.com/Shougo/dein.vim

  if dein#load_state(s:dein_path)
    call dein#begin(s:dein_path)
    call dein#load_toml(s:toml_path . '/dein.toml', {'lazy': 0})
    call dein#load_toml(s:toml_path . '/dein_lazy.toml', {'lazy': 1})
    call dein#load_toml(s:toml_path . '/ddc.toml', {'lazy': 1})
    call dein#end()
    call dein#save_state()
  endif

  filetype plugin indent on
  syntax enable

  if dein#check_install()
    call dein#install()
  endif

  "End dein Scripts-------------------------
  set termguicolors
  set background=dark
  syntax on
  colorscheme iceberg
endif

